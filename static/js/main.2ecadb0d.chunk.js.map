{"version":3,"sources":["Map.js","Source.js","Layer.js","Basemap.js","OpacitySlider.js","App.js","index.js"],"names":["Map","state","map","getChildContext","_this","_this2","this","MapboxGl","accessToken","container","style","flyTo","center","zoom","on","setState","nextProps","nextState","children","props","_this3","react_default","a","createElement","className","ref","x","Component","childContextTypes","PropTypes","object","Source","context","_this$props","id","url","addSource","type","removeSource","React","Children","child","cloneElement","sourceId","sourceLayer","layer","contextTypes","Layer","_this$props$layout","layout","_this$props$paint","paint","sliderValue","isLayerChecked","before","layerId","concat","opacity","addLayer","source","source-layer","merge","Object","defineProperty","setLayoutProperty","_this$props2","setPaintProperty","visibility","_this$props3","removeLayer","color","getPaintProperty","OpacitySlider","display","Slider_default","defaultValue","value","onChange","handleSlider","width","App","teal","purple","orange","event","handleCheckbox","isInputChecked","target","MuiThemeProvider_default","src_Map","Source_Source","Layer_Layer","line-color","fill-color","Basemap_Source","src_OpacitySlider","Checkbox_default","label","onCheck","checked","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2ecadb0d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MapboxGl from 'mapbox-gl/dist/mapbox-gl.js'\n\nclass Map extends Component {\n\n  static childContextTypes = {\n    map: PropTypes.object\n  }\n\n  state = {\n    map: null\n  }\n\n  getChildContext = () => ({\n    map: this.state.map\n  })\n\n  componentDidMount() {\n    MapboxGl.accessToken = 'pk.eyJ1IjoiYWxpY2VhdGQyZCIsImEiOiJjaXRwa2Z2aW0wMDBoMzNxZnhzMjRweWY4In0.2IxUsrVVbFKal0J8OZSeOg'\n\n    const map = new MapboxGl.Map({\n      container: this.container,\n      style: 'mapbox://styles/mapbox/light-v9'\n    })\n\n    map.flyTo({ center: [13.29, 52.51], zoom: 9 })\n\n    map.on('load', (...args) => {\n      this.setState({ map })\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.children !== this.props.children ||\n      nextState.map !== this.state.map\n    )\n  }\n\n  render() {\n    const { children } = this.props\n    const { map } = this.state\n    return (\n      <div className='Map' ref={(x) => { this.container = x }}>\n        { map && children }\n      </div>\n    )\n  }\n}\n\nexport default Map\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Source extends Component {\n\n  static propTypes = {\n    id: PropTypes.string,\n    url: PropTypes.string,\n    layer: PropTypes.string,\n    children: PropTypes.node\n  }\n\n  static contextTypes = {\n    map: PropTypes.object\n  }\n\n  componentWillMount() {\n    const { map } = this.context\n    const {\n      id,\n      url\n    } = this.props\n\n    map.addSource(id, { type: 'vector', url })\n  }\n\n  componentWillUnmount() {\n    const { map } = this.context\n    const { id } = this.props\n    map.removeSource(id)\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.children &&\n          React.Children.map(this.props.children, child => (\n            React.cloneElement(child, {\n              sourceId: this.props.id,\n              sourceLayer: this.props.layer\n            })\n          ))\n        }\n      </div>\n    )\n  }\n}\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport merge from 'lodash.merge'\n\nexport default class Layer extends Component {\n\n  static propTypes = {\n    id: PropTypes.string,\n    type: PropTypes.string,\n    sourceLayer: PropTypes.string,\n    sourceId: PropTypes.string,\n    paint: PropTypes.object,\n    layout: PropTypes.object,\n    before: PropTypes.string\n  }\n\n  static contextTypes = {\n    map: PropTypes.object,\n  }\n\n  componentWillMount() {\n    const { map } = this.context\n    const {\n      id,\n      type,\n      sourceLayer,\n      sourceId,\n      layout = {},\n      paint = {},\n      sliderValue,\n      isLayerChecked,\n      before\n    } = this.props\n\n    const layerId = `${sourceId}-${id}`\n    const opacity = `${type}-opacity`\n\n    map.addLayer({\n      id: layerId,\n      source: sourceId,\n      'source-layer': sourceLayer,\n      type,\n      layout,\n      paint: merge(paint, {\n        [opacity]: sliderValue\n      })\n    }, before)\n\n    if(!isLayerChecked) map.setLayoutProperty(layerId, 'visibility', 'none')\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { map } = this.context\n    const { id, type, sourceId, sliderValue, isLayerChecked } = this.props\n    const layerId = `${sourceId}-${id}`\n\n    if (nextProps.sliderValue && nextProps.sliderValue !== sliderValue) {\n      map.setPaintProperty(layerId, `${type}-opacity`, nextProps.sliderValue)\n    }\n    if (nextProps.isLayerChecked !== isLayerChecked) {\n      const visibility = (nextProps.isLayerChecked) ? 'visible' : 'none'\n      map.setLayoutProperty(layerId, 'visibility', visibility)\n    }\n\n    return null\n  }\n\n  componentWillUnmount() {\n    const { map } = this.context\n    const { id, sourceId } = this.props\n    const layerId = `${sourceId}-${id}`\n    map.removeLayer(layerId)\n  }\n\n  render() {\n    return null\n  }\n}\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Source extends Component {\n\n  static propTypes = {\n    isLayerChecked: PropTypes.bool\n  }\n\n  static contextTypes = {\n    map: PropTypes.object\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { map } = this.context\n    const { isLayerChecked } = this.props\n    const color = (map.getPaintProperty('water', 'fill-color') === '#ffa500') ? '#cad2d3' : '#ffa500'\n\n    if (nextProps.isLayerChecked !== isLayerChecked) {\n      map.setPaintProperty('water', 'fill-color', color)\n    }\n\n    return null\n  }\n\n  render() {\n    return null\n  }\n}\n","import React from 'react'\nimport Slider from 'material-ui/Slider'\n\nconst OpacitySlider = (props) => (\n  <div style={{ display: 'flex' }}>\n    <p>Opacity: </p>\n    <Slider\n      defaultValue={0.5}\n      value={props.sliderValue}\n      onChange={props.handleSlider}\n      style={{ width: '60vh' }}\n    />\n    <p>{props.sliderValue}</p>\n  </div>\n)\n\nexport default OpacitySlider\n","import React, { Component } from 'react'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nimport Map from './Map'\nimport Source from './Source'\nimport Layer from './Layer'\nimport Basemap from './Basemap'\nimport OpacitySlider from './OpacitySlider'\nimport Checkbox from 'material-ui/Checkbox'\n\n\nclass App extends Component {\n  state = {\n    sliderValue: 0.5,\n    teal: {\n      isLayerChecked: true\n    },\n    purple: {\n      isLayerChecked: false\n    },\n    orange: {\n      isLayerChecked: false\n    }\n  }\n\n  handleSlider = (event, value) => {\n    this.setState({sliderValue: value});\n  }\n\n  handleCheckbox = (event, isInputChecked) => {\n    this.setState({\n      [event.target.value]: {\n        isLayerChecked: isInputChecked\n      }\n    })\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        <div className='App'>\n          <div className='App-header'>\n            <h2>React + Mapbox GL = &lt;3</h2>\n          </div>\n          <Map>\n            <Source\n              id='sourceID'\n              url='mapbox://aliceatd2d.1skjaazb'\n              layer='railwayLines-2es0gk'\n            >\n              <Layer\n                id='line-layer'\n                type='line'\n                paint={{\n                  'line-color': 'teal'\n                }}\n                sliderValue={this.state.sliderValue}\n                isLayerChecked={this.state.teal.isLayerChecked}\n              />\n              <Layer\n                id='fill-layer'\n                type='fill'\n                paint={{\n                  'fill-color': 'purple'\n                }}\n                sliderValue={this.state.sliderValue}\n                isLayerChecked={this.state.purple.isLayerChecked}\n              />\n            </Source>\n            <Basemap\n              isLayerChecked={this.state.orange.isLayerChecked}\n            />\n          </Map>\n          <OpacitySlider\n            handleSlider={this.handleSlider}\n            sliderValue={this.state.sliderValue}\n          />\n          <div>\n            <Checkbox\n              label='Show railway lines'\n              onCheck={this.handleCheckbox}\n              checked={this.state.teal.isLayerChecked}\n              value='teal'\n            />\n            <Checkbox\n              label='Show another layer'\n              onCheck={this.handleCheckbox}\n              checked={this.state.purple.isLayerChecked}\n              value='purple'\n            />\n            <Checkbox\n              label='Paint water orange'\n              onCheck={this.handleCheckbox}\n              checked={this.state.orange.isLayerChecked}\n              value='orange'\n            />\n          </div>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}