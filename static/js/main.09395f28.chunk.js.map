{"version":3,"sources":["Map.js","Source.js","Layer.js","Basemap.js","OpacitySlider.js","App.js","index.js"],"names":["Map","state","map","getChildContext","MapboxGl","accessToken","container","this","style","flyTo","center","zoom","on","setState","nextProps","nextState","children","props","className","ref","x","Component","childContextTypes","PropTypes","object","Source","context","id","url","addSource","type","removeSource","React","Children","child","cloneElement","sourceId","sourceLayer","layer","contextTypes","Layer","layout","paint","sliderValue","isLayerChecked","before","layerId","opacity","addLayer","source","merge","setLayoutProperty","setPaintProperty","visibility","removeLayer","color","getPaintProperty","OpacitySlider","display","defaultValue","value","onChange","handleSlider","width","App","teal","purple","orange","event","handleCheckbox","isInputChecked","target","label","onCheck","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09395f28.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport MapboxGl from 'mapbox-gl/dist/mapbox-gl.js'\n\nclass Map extends Component {\n\n  static childContextTypes = {\n    map: PropTypes.object\n  }\n\n  state = {\n    map: null\n  }\n\n  getChildContext = () => ({\n    map: this.state.map\n  })\n\n  componentDidMount() {\n    MapboxGl.accessToken = 'pk.eyJ1IjoiYWxpY2VhdGQyZCIsImEiOiJjaXRwa2Z2aW0wMDBoMzNxZnhzMjRweWY4In0.2IxUsrVVbFKal0J8OZSeOg'\n\n    const map = new MapboxGl.Map({\n      container: this.container,\n      style: 'mapbox://styles/mapbox/light-v9'\n    })\n\n    map.flyTo({ center: [13.29, 52.51], zoom: 9 })\n\n    map.on('load', (...args) => {\n      this.setState({ map })\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.children !== this.props.children ||\n      nextState.map !== this.state.map\n    )\n  }\n\n  render() {\n    const { children } = this.props\n    const { map } = this.state\n    return (\n      <div className='Map' ref={(x) => { this.container = x }}>\n        { map && children }\n      </div>\n    )\n  }\n}\n\nexport default Map\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Source extends Component {\n\n  static propTypes = {\n    id: PropTypes.string,\n    url: PropTypes.string,\n    layer: PropTypes.string,\n    children: PropTypes.node\n  }\n\n  static contextTypes = {\n    map: PropTypes.object\n  }\n\n  componentWillMount() {\n    const { map } = this.context\n    const {\n      id,\n      url\n    } = this.props\n\n    map.addSource(id, { type: 'vector', url })\n  }\n\n  componentWillUnmount() {\n    const { map } = this.context\n    const { id } = this.props\n    map.removeSource(id)\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.children &&\n          React.Children.map(this.props.children, child => (\n            React.cloneElement(child, {\n              sourceId: this.props.id,\n              sourceLayer: this.props.layer\n            })\n          ))\n        }\n      </div>\n    )\n  }\n}\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport merge from 'lodash.merge'\n\nexport default class Layer extends Component {\n\n  static propTypes = {\n    id: PropTypes.string,\n    type: PropTypes.string,\n    sourceLayer: PropTypes.string,\n    sourceId: PropTypes.string,\n    paint: PropTypes.object,\n    layout: PropTypes.object,\n    before: PropTypes.string\n  }\n\n  static contextTypes = {\n    map: PropTypes.object,\n  }\n\n  componentWillMount() {\n    const { map } = this.context\n    const {\n      id,\n      type,\n      sourceLayer,\n      sourceId,\n      layout = {},\n      paint = {},\n      sliderValue,\n      isLayerChecked,\n      before\n    } = this.props\n\n    const layerId = `${sourceId}-${id}`\n    const opacity = `${type}-opacity`\n\n    map.addLayer({\n      id: layerId,\n      source: sourceId,\n      'source-layer': sourceLayer,\n      type,\n      layout,\n      paint: merge(paint, {\n        [opacity]: sliderValue\n      })\n    }, before)\n\n    if(!isLayerChecked) map.setLayoutProperty(layerId, 'visibility', 'none')\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { map } = this.context\n    const { id, type, sourceId, sliderValue, isLayerChecked } = this.props\n    const layerId = `${sourceId}-${id}`\n\n    if (nextProps.sliderValue && nextProps.sliderValue !== sliderValue) {\n      map.setPaintProperty(layerId, `${type}-opacity`, nextProps.sliderValue)\n    }\n    if (nextProps.isLayerChecked !== isLayerChecked) {\n      const visibility = (nextProps.isLayerChecked) ? 'visible' : 'none'\n      map.setLayoutProperty(layerId, 'visibility', visibility)\n    }\n\n    return null\n  }\n\n  componentWillUnmount() {\n    const { map } = this.context\n    const { id, sourceId } = this.props\n    const layerId = `${sourceId}-${id}`\n    map.removeLayer(layerId)\n  }\n\n  render() {\n    return null\n  }\n}\n","import { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Source extends Component {\n\n  static propTypes = {\n    isLayerChecked: PropTypes.bool\n  }\n\n  static contextTypes = {\n    map: PropTypes.object\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { map } = this.context\n    const { isLayerChecked } = this.props\n    const color = (map.getPaintProperty('water', 'fill-color') === '#ffa500') ? '#cad2d3' : '#ffa500'\n\n    if (nextProps.isLayerChecked !== isLayerChecked) {\n      map.setPaintProperty('water', 'fill-color', color)\n    }\n\n    return null\n  }\n\n  render() {\n    return null\n  }\n}\n","import React from 'react'\nimport Slider from 'material-ui/Slider'\n\nconst OpacitySlider = (props) => (\n  <div style={{ display: 'flex' }}>\n    <p>Opacity: </p>\n    <Slider\n      defaultValue={0.5}\n      value={props.sliderValue}\n      onChange={props.handleSlider}\n      style={{ width: '60vh' }}\n    />\n    <p>{props.sliderValue}</p>\n  </div>\n)\n\nexport default OpacitySlider\n","import React, { Component } from 'react'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nimport Map from './Map'\nimport Source from './Source'\nimport Layer from './Layer'\nimport Basemap from './Basemap'\nimport OpacitySlider from './OpacitySlider'\nimport Checkbox from 'material-ui/Checkbox'\n\n\nclass App extends Component {\n  state = {\n    sliderValue: 0.5,\n    teal: {\n      isLayerChecked: true\n    },\n    purple: {\n      isLayerChecked: false\n    },\n    orange: {\n      isLayerChecked: false\n    }\n  }\n\n  handleSlider = (event, value) => {\n    this.setState({sliderValue: value});\n  }\n\n  handleCheckbox = (event, isInputChecked) => {\n    this.setState({\n      [event.target.value]: {\n        isLayerChecked: isInputChecked\n      }\n    })\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        <div className='App'>\n          <div className='App-header'>\n            <h2>React + Mapbox GL = &lt;3</h2>\n          </div>\n          <Map>\n            <Source\n              id='sourceID'\n              url='mapbox://aliceatd2d.1skjaazb'\n              layer='railwayLines-2es0gk'\n            >\n              <Layer\n                id='line-layer'\n                type='line'\n                paint={{\n                  'line-color': 'teal'\n                }}\n                sliderValue={this.state.sliderValue}\n                isLayerChecked={this.state.teal.isLayerChecked}\n              />\n              <Layer\n                id='fill-layer'\n                type='fill'\n                paint={{\n                  'fill-color': 'purple'\n                }}\n                sliderValue={this.state.sliderValue}\n                isLayerChecked={this.state.purple.isLayerChecked}\n              />\n            </Source>\n            <Basemap\n              isLayerChecked={this.state.orange.isLayerChecked}\n            />\n          </Map>\n          <OpacitySlider\n            handleSlider={this.handleSlider}\n            sliderValue={this.state.sliderValue}\n          />\n          <div>\n            <Checkbox\n              label='Show railway lines'\n              onCheck={this.handleCheckbox}\n              checked={this.state.teal.isLayerChecked}\n              value='teal'\n            />\n            <Checkbox\n              label='Show another layer'\n              onCheck={this.handleCheckbox}\n              checked={this.state.purple.isLayerChecked}\n              value='purple'\n            />\n            <Checkbox\n              label='Paint water orange'\n              onCheck={this.handleCheckbox}\n              checked={this.state.orange.isLayerChecked}\n              value='orange'\n            />\n          </div>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}